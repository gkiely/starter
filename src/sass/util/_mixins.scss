// If it has parameters then it's a mixin. 
// If it doesn't make it a %placeholder and @extend it.

@mixin font($font, $fz, $fw:null){
  @if ($fw){
    font: $fw em($fz) $font;
  }
  @else{
    font: em($fz) $font;
  }
}

@mixin wh($w, $h: $w, $fz: 16){
  width: em($w, $fz);
  height: em($h, $fz);
}

@mixin whp($w, $h: $w){
  width: $w * 1%;
  height: $h * 1%;
}

/**
 * module mixin
 * 
 * @param  $args...   1st: module name, rest: list of modifiers
 * @return Placeholders
 */
@mixin module($args...){
  $module: nth($args, 1);
  
  @extend %#{$module};
  @if length($args) > 1{
    @for $i from 2 through length($args){
      $item: nth($args, $i);
      @extend %#{$module}-#{$item};
    }    
  }
}

// @mixin mod($args...){
//   $module: nth($args, 1);
//   @if length($args) > 1{
//     @for $i from 2 through length($args){
//       $item: nth($args, $i);
//       $props: map-get($module, $item);
//       @each $key, $val in $props{
//         #{$key}: $val;
//       }
//     }
//   }
// }

// @function map-set($map, $key, $value) {
//   $new: ($key: $value);
//   @return map-merge($map, $new);
// }

// $modules: ();
// @mixin createModule($name, $map){
//     $modules: map-set($modules, sup, $map);
//     @debug $modules;
// }

// @include createModule,(Text (
//   light: (
//     color: red,
//     background: blue
//   )
// ));


// @mixin modd($args...){
//   $module: nth($args, 1);
//   @if length($args) > 1{
//      @for $i from 2 through length($args){

//      }
//   }
// }

// @include modd(Text, light);